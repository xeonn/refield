name: Release

on:
  push:
    tags:
      - "v*"  # Runs only when pushing a version tag (e.g., v1.0.0)
  workflow_dispatch:  # Allows manual execution from GitHub UI

permissions:
  contents: write  # Required for uploading release assets

jobs:
  build:
    name: Build Binaries
    runs-on: ubuntu-latest  # Use Ubuntu as the main build runner
    strategy:
      matrix:
        target: 
          - x86_64-unknown-linux-gnu
          - x86_64-apple-darwin
          - aarch64-apple-darwin
          - x86_64-pc-windows-gnu
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Install cross (for cross-compilation)
        run: cargo install cross --git https://github.com/cross-rs/cross

      - name: Build for ${{ matrix.target }}
        run: cross build --release --target ${{ matrix.target }}

      - name: Rename binary for release
        run: |
          BIN_NAME="refield"
          if [[ "${{ matrix.target }}" == *"windows"* ]]; then
            mv target/${{ matrix.target }}/release/$BIN_NAME.exe $BIN_NAME-${{ matrix.target }}.exe
          else
            mv target/${{ matrix.target }}/release/$BIN_NAME $BIN_NAME-${{ matrix.target }}
          fi

      - name: Upload binaries
        uses: actions/upload-artifact@v4
        with:
          name: refield-${{ matrix.target }}
          path: |
            refield-${{ matrix.target }}*
          if-no-files-found: error

  release:
    name: Create GitHub Release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download built binaries
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Prepare Release Assets
        run: |
          cd artifacts
          find . -type f -exec mv {} . \;
          rm -r refield-*
          ls -lh

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: artifacts/*
          token: ${{ secrets.GITHUB_TOKEN }}
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
